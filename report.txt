 
 Mean face and eigenfaces images are on the ./imgs/ folder
 
   # Use a cross-validation scheme of leave-one-"expression or lighting" for the Yace Face Database. What expression/lighting is the worst in terms of accuracy?

different lightning images have the worst performance, different expressions are well recognized with a little exception of surprise.

   # Use a ten-fold cross-validation scheme and report the mean an standard deviation accuracies for the ORL database. Is there a statisical significance difference between the reported values?

Comparing the implemented method to cv2's EigenFaceRecognizer utilizing Welchâ€™s t-test, with the null hypothesis  that the averages are equal (p=0.01).
We obtain pvalue = 1.27e-05 and so we reject the null hypothesis, the method implemented is not equal to cv2's.

   # Provide a runtime analysis for training and testing?

Train and test times on the ORL database 10 fold cross validation
My implementation has a faster training and test times. Using only 5 eigenvectors helped, but affected the accuracy.

My implementation
   fit_time': array([1.00925779, 1.01834702, 1.05120468, 1.05718064, 1.07875562, 1.23162127, 1.31951165, 1.30763865, 1.29068565, 1.1576283])
      mean: 1.152
      std: 0.11859
   score_time': array([0.04986668, 0.04889274, 0.0508647 , 0.04687524, 0.04822636, 0.04388261, 0.04188752, 0.03291154, 0.03091693, 0.02393508])
      mean: 0.0418
      std: 0.00886308

cv2.EigenFaceRecognizer
   fit_time': array([4.3460865 , 4.18502712, 4.46488404, 4.54302263, 4.37383175, 4.26951671, 4.47269917, 4.64629173, 4.70555472, 4.91293168])
      mean: 4.491
      std: 0.20719
   score_time': array([0.38266706, 0.39571643, 0.37302399, 0.3540535 , 0.3460815 , 0.33812118, 0.30122352, 0.23793554, 0.22838974, 0.16767478])
      mean: 0.3124
      std: 0.07263490


== Test results

## ORL database

# My implementation
# using 5 evalues

Scores
[0.7  0.51282051  0.71052632  0.78378378  0.61111111  0.71428571  0.61290323  0.8  0.54545455  0.70588235]
mean accuracy: 0.669676756
stddev:  0.09087450626896658

# cv2.EigenFaceRecognizer results

Scores
[0.85  0.76923077  0.92105263 1.  0.88888889  0.88571429  0.87096774  0.92  1.  0.88235294]
mean accuracy: 0.898820723
stddev:  0.06473926725986905

==========================

## leave-one-"expression or lighting"

# My implementation
# using 5 evalues

tag centerlight
accuracy: 33.33333333333333%

tag glasses
accuracy: 80.0%

tag happy
accuracy: 93.33333333333333%

tag leftlight
accuracy: 33.33333333333333%

tag noglasses
accuracy: 100.0%

tag normal
accuracy: 100.0%

tag rightlight
accuracy: 13.333333333333334%

tag sad
accuracy: 93.33333333333333%

tag sleepy
accuracy: 100.0%

tag surprised
accuracy: 73.33333333333333%

tag wink
accuracy: 93.33333333333333%


==========================

# using 21 evalues
tag centerlight
accuracy: 53.333333333333336%

# using 21 evalues
tag glasses
accuracy: 93.33333333333333%

# using 22 evalues
tag happy
accuracy: 100.0%

# using 23 evalues
tag leftlight
accuracy: 33.33333333333333%

# using 23 evalues
tag noglasses
accuracy: 100.0%

# using 23 evalues
tag normal
accuracy: 100.0%

# using 23 evalues
tag rightlight
accuracy: 33.33333333333333%

# using 22 evalues
tag sad
accuracy: 93.33333333333333%

# using 22 evalues
tag sleepy
accuracy: 100.0%

# using 21 evalues
tag surprised
accuracy: 86.66666666666667%

# using 21 evalues
tag wink
accuracy: 100.0%


==========================

# cv2.EigenFaceRecognizer

tag centerlight
accuracy:  60.0 %

tag glasses
accuracy:  100.0 %

tag happy
accuracy:  100.0 %

tag leftlight
accuracy:  46.666666666666664 %

tag noglasses
accuracy:  100.0 %

tag normal
accuracy:  100.0 %

tag rightlight
accuracy:  40.0 %

tag sad
accuracy:  93.33333333333333 %

tag sleepy
accuracy:  100.0 %

tag surprised
accuracy:  80.0 %

tag wink
accuracy:  100.0 %
